# Note: to create this image you can use
# dotnet run -- render --scene Examples/Inputs/PigScene/PigScene.txt --pfmfile Examples/Inputs/PigScene/PigScene.pfm --ldrfile Examples/Inputs/PigScene/PigScene.jpg --render-type r --height 720 --width 720 --samples-per-pixel 9 --max-depth 2 --n-rays 25 --russian-roulette 1

# Firstly we define some materials in order to construct the Cornell's box

material GREEN_MATERIAL(               
    diffuse( uniform(<0.196 , 0.804, 0.196>) ),  
    uniform(<0 , 0, 0>) 
)

material RED_MATERIAL(               
    diffuse( uniform(<1,0,0>) ),  
    uniform(<0, 0, 0>) 
)

material WHITE_MATERIAL(               
    diffuse( uniform(<1,1,1>) ),  
    uniform(<0, 0, 0>) 
)

material SPECULAR_MATERIAL(               
    specular( uniform(<0.5, 0.5, 0.5>) ),  
    uniform(<0, 0, 0>) 
)

material LIGHT_MATERIAL(               
    diffuse( uniform(<1,1,1>) ),  
    uniform(<1, 1, 1>) 
)

# Cornell's box
box(WHITE_MATERIAL, scaling([5,6,5]))
box(RED_MATERIAL, translation([0, -10, 0]) * scaling([5,5,5]))
box(GREEN_MATERIAL, translation([0, 10, 0]) * scaling([5,5,5]))

# Define the lamp
box( LIGHT_MATERIAL, translation([0, 0, 5.99]) * scaling([3, 3, 1]) )

# This is an escamotage for creating a finite plane
# Define the mirror

CSGintersection(
    box( SPECULAR_MATERIAL , identity),
    plane(SPECULAR_MATERIAL, identity),
    translation([4, 3, -1]) * rotation_z(45) * rotation_y(90) * scaling([5, 1.7, 1])
)

# Pig object
# Pig is a built-in shape representing a... pig! (hard to predict ðŸ˜…)
pig(translation([1, -0.5, -3.5]) * rotation_z(225) * scaling([1.1, 1.1, 1.1]))

# Lastly we position the camera
camera(perspective, translation([-4, 0, 0]), 1.0, 1.0)
